version: '3.8'

services:
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ./docker/data/mongodb:/data/db
      - ./docker/logs/mongodb:/var/log/mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin_password
    networks:
      - app-network
    command: ["mongod", "--logpath", "/var/log/mongodb/mongodb.log"]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - path.data=/usr/share/elasticsearch/data
      - path.logs=/usr/share/elasticsearch/logs
    ports:
      - "9200:9200"
    volumes:
      - ./docker/data/elasticsearch:/usr/share/elasticsearch/data
      - ./docker/logs/elasticsearch:/usr/share/elasticsearch/logs
    networks:
      - app-network
    ulimits:
      memlock:
        soft: -1
        hard: -1

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - ./docker/data/qdrant:/qdrant/storage
      - ./docker/logs/qdrant:/qdrant/logs
    environment:
      - QDRANT_STORAGE_PATH=/qdrant/storage
    networks:
      - app-network

  ollama:
    build:
      context: .
      dockerfile: Dockerfile.ollama
    ports:
      - "11434:11434"
    volumes:
      - ./docker/data/ollama:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    networks:
      - app-network

  backend:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./docker/data/uploads:/app/uploads
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/hrms
      - ELASTICSEARCH_NODE=http://elasticsearch:9200
      - QDRANT_URL=http://qdrant:6333
      - OLLAMA_API_URL=http://ollama:11434
    depends_on:
      - mongodb
      - elasticsearch
      - qdrant
      - ollama
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  elasticsearch_data:
    driver: local
  qdrant_data:
    driver: local
  ollama_data:
    driver: local